// Code generated by MockGen. DO NOT EDIT.
// Source: delta_executor.go

// Package executor is a generated GoMock package.
package executor

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDeltaExecutor is a mock of DeltaExecutor interface.
type MockDeltaExecutor struct {
	ctrl     *gomock.Controller
	recorder *MockDeltaExecutorMockRecorder
}

// MockDeltaExecutorMockRecorder is the mock recorder for MockDeltaExecutor.
type MockDeltaExecutorMockRecorder struct {
	mock *MockDeltaExecutor
}

// NewMockDeltaExecutor creates a new mock instance.
func NewMockDeltaExecutor(ctrl *gomock.Controller) *MockDeltaExecutor {
	mock := &MockDeltaExecutor{ctrl: ctrl}
	mock.recorder = &MockDeltaExecutorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeltaExecutor) EXPECT() *MockDeltaExecutorMockRecorder {
	return m.recorder
}

// ExecuteDelta mocks base method.
func (m *MockDeltaExecutor) ExecuteDelta(ctx context.Context, delta Delta) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExecuteDelta", ctx, delta)
	ret0, _ := ret[0].(error)
	return ret0
}

// ExecuteDelta indicates an expected call of ExecuteDelta.
func (mr *MockDeltaExecutorMockRecorder) ExecuteDelta(ctx, delta interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExecuteDelta", reflect.TypeOf((*MockDeltaExecutor)(nil).ExecuteDelta), ctx, delta)
}
