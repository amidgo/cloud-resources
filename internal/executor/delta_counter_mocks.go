// Code generated by MockGen. DO NOT EDIT.
// Source: delta_counter.go

// Package executor is a generated GoMock package.
package executor

import (
	resourcemodel "github.com/amidgo/cloud-resources/internal/model/resourcemodel"
	resourcetype "github.com/amidgo/cloud-resources/internal/model/resourcetype"
	statiscticsmodel "github.com/amidgo/cloud-resources/internal/model/statiscticsmodel"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDeltaCounter is a mock of DeltaCounter interface.
type MockDeltaCounter struct {
	ctrl     *gomock.Controller
	recorder *MockDeltaCounterMockRecorder
}

// MockDeltaCounterMockRecorder is the mock recorder for MockDeltaCounter.
type MockDeltaCounterMockRecorder struct {
	mock *MockDeltaCounter
}

// NewMockDeltaCounter creates a new mock instance.
func NewMockDeltaCounter(ctrl *gomock.Controller) *MockDeltaCounter {
	mock := &MockDeltaCounter{ctrl: ctrl}
	mock.recorder = &MockDeltaCounterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeltaCounter) EXPECT() *MockDeltaCounterMockRecorder {
	return m.recorder
}

// Delta mocks base method.
func (m *MockDeltaCounter) Delta(statistics statiscticsmodel.Statistics, resources []*resourcemodel.Resource) Delta {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delta", statistics, resources)
	ret0, _ := ret[0].(Delta)
	return ret0
}

// Delta indicates an expected call of Delta.
func (mr *MockDeltaCounterMockRecorder) Delta(statistics, resources interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delta", reflect.TypeOf((*MockDeltaCounter)(nil).Delta), statistics, resources)
}

// MockDeltaCounterFabric is a mock of DeltaCounterFabric interface.
type MockDeltaCounterFabric struct {
	ctrl     *gomock.Controller
	recorder *MockDeltaCounterFabricMockRecorder
}

// MockDeltaCounterFabricMockRecorder is the mock recorder for MockDeltaCounterFabric.
type MockDeltaCounterFabricMockRecorder struct {
	mock *MockDeltaCounterFabric
}

// NewMockDeltaCounterFabric creates a new mock instance.
func NewMockDeltaCounterFabric(ctrl *gomock.Controller) *MockDeltaCounterFabric {
	mock := &MockDeltaCounterFabric{ctrl: ctrl}
	mock.recorder = &MockDeltaCounterFabricMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeltaCounterFabric) EXPECT() *MockDeltaCounterFabricMockRecorder {
	return m.recorder
}

// DeltaCounter mocks base method.
func (m *MockDeltaCounterFabric) DeltaCounter(arg0 resourcetype.ResourceType) DeltaCounter {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeltaCounter", arg0)
	ret0, _ := ret[0].(DeltaCounter)
	return ret0
}

// DeltaCounter indicates an expected call of DeltaCounter.
func (mr *MockDeltaCounterFabricMockRecorder) DeltaCounter(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeltaCounter", reflect.TypeOf((*MockDeltaCounterFabric)(nil).DeltaCounter), arg0)
}
